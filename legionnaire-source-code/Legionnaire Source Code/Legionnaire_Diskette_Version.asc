;LEGIONNAIRE V22D  MAY 22, 1982
;
	INCLUDE	D4:LEG22T.ASM
;
;Page zero RAM
;
CASINI	=	2
DOSVEC	=	$A
DOSINI	=	$C
RTCLKH	=	$12
RTCLKM	=	$13
RTCLKL	=	$14
ATRACT	=	$4D
DRKMSK	=	$4E
COLRSH	=	$4F
;
	ORG	$B0
;
;These locations are used by the interrupt service routine
;
DLSTPT	ORG	*+2	;Zero page pointer to display list
MAPLO	ORG	*+1
MAPHI	ORG	*+1
UNIT	ORG	*+1	;number of unit under window
CURSXL	ORG	*+1
CURSXH	ORG	*+1
CURSYL	ORG	*+1	;cursor coordinates on screen (map frame)
CURSYH	ORG	*+1
OFFLO	ORG	*+1	;How far to offset new LMS value
OFFHI	ORG	*+1
TEMPI	ORG	*+1	;An all-purpose temporary register
CHUNKX	ORG	*+1	;cursor coordinates (pixel frame)
CHUNKY	ORG	*+1
NOUNTS	ORG	*+1
NOROMS	ORG	*+1
;
;These locations are for the mainline routines
;
MAPPTR	ORG	*+2
ARMY	ORG	*+1
UNITNO	ORG	*+1
DEFNDR	ORG	*+1
TEMP1	ORG	*+1
TEMP2	ORG	*+1
ACCLO	ORG	*+1
ACCHI	ORG	*+1
TURN	ORG	*+1
LAT	ORG	*+1
LONG	ORG	*+1
MULTPR	ORG	*+1
DIVISR	ORG	*+1
PRODLO	ORG	*+1
PRODHI	ORG	*+1
;
;OS locations (see OS manual)
;
DLIVEC	=	$200
SDMCTL	=	$22F
DLSTLO	=	$230 ;Existing	OS pointer to display list
DLSTHI	=	$231
SSKCTL	=	$232
GPRIOR	=	$26F
STICK	=	$278
PCOLR0	=	$2C0
PCOLR1	=	$2C1
PCOLR2	=	$2C2
PCOLR3	=	$2C3
COLOR0	=	$2C4
COLOR1	=	$2C5
COLOR4	=	$2C8
CH	=	$2FC
;
;HARDWARE LOCATIONS
;
HPOSP0	=	$D000
HPOSP1	=	$D001
HPOSP2	=	$D002
HPOSP3	=	$D003
SIZEP0	=	$D008
TRIG0	=	$D010
TRIG1	=	$D011
COLPF0	=	$D016
COLPF1	=	$D017
COLPF2	=	$D018
COLBAK	=	$D01A
GRACTL	=	$D01D
CONSOL	=	$D01F
AUDF1	=	$D200
AUDC1	=	$D201
AUDF2	=	$D202
AUDC2	=	$D203
AUDF3	=	$D204
AUDC3	=	$D205
AUDF4	=	$D206
AUDC4	=	$D207
AUDCTL	=	$D208
RANDOM	=	$D20A
SKCTL	=	$D20F
HSCROLL	=	$D404
VSCROLL	=	$D405
PMBASE	=	$D407
CHBASE	=	$D409
WSYNC	=	$D40A
VCOUNT	=	$D40B
NMIEN	=	$D40E
SETVBV	=	$E45C
XITVBV	=	$E462
;
;Page 6 usage
;
	ORG	$0600
;first come locations used by the interrupt service routine
;
XPOSL	ORG	*+1	;Horizontal position of
YPOSL	ORG	*+1	;Vertical position of
YPOSH	ORG	*+1	;upper left corner of screen window
SCY	ORG	*+1	;vert position of cursor (player frame)
SHPOS0	ORG	*+1	;shadows player 0 position
BUTFLG	ORG	*+1
BUTMSK	ORG	*+1
TYL	ORG	*+1
TYH	ORG	*+1
DELAY	ORG	*+1	;acceleration delay on scrolling
TIMSCL	ORG	*+1	;frame to scroll in
TEMPLO	ORG	*+1	;temporary
TEMPHI	ORG	*+1
BASEX	ORG	*+1	;start position for arrow (player frame)
BASEY	ORG	*+1
STEPX	ORG	*+1	;intermediate position of arrow
STEPY	ORG	*+1
STPCNT	ORG	*+1	;which intermediate steps arrow is on
ORDCNT	ORG	*+1	;which order arrow is showing
ORD1	ORG	*+1	;orders record
ORD2	ORG	*+1
ARRNDX	ORG	*+1	;arrow index
HOWMNY	ORG	*+1	;how many orders for unit under cursor
KRZX	ORG	*+1	;maltakreuze coords (player frame)
KRZY	ORG	*+1
DBTIMR	ORG	*+1	;joystick debounce timer
STICKI	ORG	*+1	;coded	value	of	stick direction (0-3)
ERRFLG	ORG	*+1
KRZFLG	ORG	*+1
STKFLG	ORG	*+1
HITFLG	ORG	*+1
TXL	ORG	*+1	;temporary values---slightly shifted
TXH	ORG	*+1
VICFLG	ORG	*+1
SQX	ORG	*+1
SQY	ORG	*+1
MOTHRX	ORG	*+1
MOTHRY	ORG	*+1
TRNCOD	ORG	*+1
TEMPX	ORG	*+1
TEMPY	ORG	*+1
RANGE	ORG	*+1
HEIGHT	ORG	*+1
DELAYL	ORG	*+1
DELAYM	ORG	*+1
HOLD	ORG	*+1
DIR	ORG	*+1
RETX	ORG	*+1
RETY	ORG	*+1
SAVCHR	ORG	*+1
ROMEX	ORG	*+1
ROMEY	ORG	*+1
NOBARS	ORG	*+1
SAFETY	ORG	*+1
DANGER	ORG	*+1
SQVAL	ORG	*+1
BESTVL	ORG	*+1
BESTDR	ORG	*+1
BSAFE	ORG	*+1
BDANG	ORG	*+1
TERM1	ORG	*+1
TERM2	ORG	*+1
TERM3	ORG	*+1
TOTBCS	ORG	*+1
TOTRCS	ORG	*+1
TOTBMS	ORG	*+1
TOTRMS	ORG	*+1
BARDIR	ORG	*+1
STKPTR	ORG	*+1
SCLFLG	ORG	*+1
IBCS	ORG	*+1
IRCS	ORG	*+1
LZFLG	ORG	*+1
BRANGE	ORG	*+1
DIVRAT	ORG	*+1
PAUFLG	ORG	*+1
ARRPTR	ORG	*+1
SAVORD	ORG	*+1
AUDCTR	ORG	*+1
QUACKO	ORG	*+1
TRIBE1	ORG	*+1
TRIBE2	ORG	*+1
BRNGLO	ORG	*+1
BRNGHI	ORG	*+1
SAVER	ORG	*+8
BSTVAL	ORG	*+1
BSTONE	ORG	*+1
BOPP	ORG	*+1
COPP	ORG	*+1
;
	ORG	$4580
MISSLS	ORG	*+128
PLYR0	ORG	*+128
PLYR1	ORG	*+128
PLYR2	ORG	*+128
PLYR3	ORG	*+128
	ORG	$6000
;First comes 512 bytes of graphics character set
CHRSET	ORG	*+512
BEEPTB	DB	30,40,50,60
ERRMSG	DB	'ONLY ROMANS ACCE'
	DB	'PT YOUR ORDERS! '
	DB	'   ONLY 8 ORDERS'
	DB	' ARE ALLOWED!   '
	DB	'     PLEASE WAIT'
	DB	' FOR CURSOR!    '
	DB	'   NO DIAGONAL M'
	DB	'OVES ALLOWED!   '
XOFF	DB	0,8,0,$F8
YOFF	DB	$F8,0,8,0
MASKO	DB	3,$0C,$30,$C0
XADD	DB	0,1,0,$FF
YADD	DB	$FF,0,1,0
WORDS	DB	'SWORDS  '
	DB	'CAESAR  '
	DB	'CRASSUS '
	DB	'LABIENUS'
	DB	'CICERO  '
	DB	'GALBA   '
	DB	'FABIUS  '
	DB	'ROSCIUS '
	DB	'COTTA   '
	DB	'PLANCUS '
	DB	'SABINUS '
	DB	'*PAUSE* '
	DB	'SCORE:  '
	DB	'LOSE!   '
	DB	'WIN!    '
	DB	'QUIT    '
	DB	'AEDUI   '
	DB	'EBURONES'
	DB	'SUEVII  '
	DB	'SENONES '
	DB	'VOCATES '
	DB	'SIBUSATI'
	DB	'SEQUANI '
	DB	'HELVETII'
	DB	'AUSCII  '
	DB	'UBII    '
	DB	'MENAPII '
	DB	'NERVII  '
	DB	'MORINI  '
	DB	'BELGAE  '
	DB	'TENCTERI'
	DB	'HUNS    '
;
	ORG	$6400
;
;The display list goes here; it is 51 bytes long.
;
DLIST	DB	$70,$70,$70
	DB	$C6,$E0,$64
	DB	$B0
	DB	$77,$FE,$64
	DB	$77,$2E,$65
	DB	$77,$5E,$65
	DB	$77,$8E,$65
	DB	$77,$BE,$65
	DB	$77,$EE,$65
	DB	$77,$1E,$66
	DB	$77,$4E,$66
	DB	$77,$7E,$66
	DB	$57,$AE,$66
	DB	$90
	DB	$C2,$80,$64
	DB	$90,$02,$90
	DB	$C2,$50,$64
	DB	$90
	DB	$41,$00,$64
;
	ORG	$6450
;This next area is reserved for the text window
TXTWDW	ORG	*+164
;
;LEGIONNAIRE V22M MAINLINE MAY 22, 1982
;
;the include statement goes here
;
	INCLUDE	D4:LEG22I.ASM
;
;This is the initialization program
;The program begins here
;
	ORG	$4800
;
INIT	CLD
	LDX	#8
BOOP99	LDA	ZPVAL,X	;initialize page zero values
	STA	DLSTPT,X
	LDA	COLTAB,X
	STA	PCOLR0,X
	DEX
	BPL	BOOP99
;
	LDX	#7
BOOP98	LDA	PSXVAL,X	;initialize page six values
	STA	XPOSL,X
	DEX
	BPL	BOOP98
;
	LDX	#51
LOOP47	LDA	IDLIST,X
	STA	DLIST,X
	DEX
	BPL	LOOP47
;
	LDA	#0
	STA	DLSTLO
	STA	HSCROL
	STA	VSCROL
	STA	AUDCTL
	STA	SCLFLG
	STA	PAUFLG
	LDA	DLSTPT+1
	STA	DLSTHI
;
;Now set up player window
;
	LDA	#PLYR0/256-2
	STA	PMBASE
	LDA	#0
	TAX
LOOP36	STA	MISSLS,X
	STA	PLYR0,X
	STA	PLYR2,X
	INX
	BNE	LOOP36
	LDX	#$AE
LOOP37	STA	TXTWDW,X
	DEX
	BNE	LOOP37
;
;set SYSTEM RESET vector
;
	LDA	#RESTART&$FF
	STA	DOSINI
	STA	DOSVEC
	STA	2
	LDA	#RESTART/256
	STA	DOSINI+1
	STA	DOSVEC+1
	STA	3
	LDA	#0
	STA	$244	;COLDST flag
	LDA	#1
	STA	9
;
;here follow various initializations
;
	LDA	#$2F
	STA	SDMCTL
	LDA	#3
	STA	GRACTL
	STA	SKCTL
	STA	SSKCTL
	LDA	#$78
	STA	HPOSP0
	LDA	#1
	STA	GPRIOR
	STA	SIZEP0
	LDX	#$33
;
	LDA	#$FF
	STA	PLYR0,X
	INX
	STA	PLYR0,X
	INX
	LDA	#$81
LOOP2	STA	PLYR0,X
	INX
	CPX	#$3F
	BNE	LOOP2
	LDA	#$FF
	STA	PLYR0,X
	STA	TURN
	INX
	STA	PLYR0,X
;
	LDX	#0
	LDY	#10
	LDA	#27
	JSR	INDEFD
	LDA	#28
	JSR	BLANKS
;
	LDX	#27
	LDA	#42
	JSR	INDEFD
	LDA	#26
	JSR	BLANKS
;
	LDX	#42
	LDA	#70
	JSR	INDEFD
	LDA	#16
	JSR	BLANKS
;
	LDX	#70
	LDA	#81
	JSR	INDEFD
;
	LDA	#5
	STA	NOROMS
;
	JSR	SETDLI
;
LOOP50	LDA	STICK
	AND	#1
	BNE	Y28
	LDA	NOROMS
	CMP	#10
	BEQ	Y32
	INC	NOROMS
	JMP	Y29
Y28	LDA	STICK
	AND	#2
	BNE	Y32
	LDA	NOROMS
	CMP	#1
	BEQ	Y32
	DEC	NOROMS
Y29	LDY	#36
	LDA	NOROMS
	JSR	DNUMBR
	LDA	#0
	STA	TXTWDW,Y
	LDA	#30
	JSR	STALL
Y32	LDA	TRIG0
	BNE	LOOP50
;
;joystick button pressed
;
	LDA	NOROMS
	ASL	A
	STA	NOBARS
	ADC	NOROMS
	STA	NOUNTS
;
	LDA	#$A3
	LDY	#10
	JSR	BLANKS
;
	JSR	WFRLS
	LDY	#61
	LDX	#176
	LDA	#192
	JSR	INDEFD
	JSR	WFRLS
	LDA	#30
	JSR	STALL
	LDX	#7
	LDY	#77
	LDA	#0
	JSR	SETRIB
	JSR	WFRLS
	LDA	TRIBE2
	STA	TRIBE1
	LDY	#109
	LDX	#192
	LDA	#208
	JSR	INDEFD
	LDA	#30
	JSR	STALL
	JSR	WFRLS
	LDA	#8
	LDX	#15
	LDY	#126
	JSR	SETRIB
;
	LDY	#10
	LDA	#$A0
	JSR	BLANKS
;
	LDA	#$FF
	STA	BUTMSK
;
;Now enable deferred vertical blank interrupt
;
	LDY	#VBISR&$FF
	LDX	#VBISR/256
	LDA	#7
	JSR	SETVBV
	JSR	SETDLI
;
;initialize all unit parameters
;
	LDA	TRIBE2
	CLC
	ADC	#10
	TAY
	LDX	NOUNTS
	DEX
LOOP3	LDA	#0
	STA	HMORDS,X
	STA	WHORDS,X
	STA	WHORDH,X
	STA	TIMINC,X
	STA	UNITX,X
	STA	UNITY,X
	STA	EXECL,X
	STA	EXECM,X
	STA	OVRTIM,X
	STA	MOVFLG,X
	LDA	ISTRNG,Y
	STA	MSTRNG,X
	STA	CSTRNG,X
	LDA	ILDR,Y
	STA	LEADER,X
	LDA	ISWAP,Y
	STA	SWAP,X
	LDA	ISLOW,Y
	STA	SLOW,X
	LDA	IDTOM,Y
	STA	DTOM,X
	LDA	IBRK,Y
	STA	BRKTHT,X
	LDA	IAGGR,Y
	STA	AGGR,X
	LDA	ISTAM,Y
	STA	STAM,X
	LDA	IOFFS,Y
	STA	OFFS,X
	LDA	IDEFS,Y
	STA	DEFS,X
	LDA	ISIDS,Y
	STA	SIDS,X
	TYA
	STA	TYPE,X
	DEX
	CPX	NOBARS
	BCS	Y82
	LDA	TRIBE1
	CLC
	ADC	#10
	TAY
Y82	CPX	NOROMS
	BCS	Y36
	TXA
	TAY
Y36	CPX	#$FF
	BNE	LOOP3
;
	JSR	CALTCS
	LDA	TOTBMS
	STA	IBCS
	LDA	TOTRMS
	STA	IRCS
	LDA	#12
	LDY	#150
	JSR	DWORDS
;
;this routine places Roman units
;
	JSR	CHOSQ
	LDA	SQX
	STA	MOTHRX
	STA	ROMEX
	LDA	SQY
	STA	MOTHRY
	STA	ROMEY
	LDA	NOROMS
	SEC
	SBC	#1
	STA	ARMY
LOOP18	JSR	PLACE1
	BPL	LOOP18
;
;This routine places barbarian units
;
LOOP17	JSR	CHOSQ
	LDA	SQX
	SEC
	SBC	MOTHRX
	JSR	ABSVAL
	STA	TEMP1
	LDA	SQY
	SEC
	SBC	MOTHRY
	JSR	ABSVAL
	CLC
	ADC	TEMP1
	CMP	#12
	BCC	LOOP17
	CMP	#31
	BCS	LOOP17
;
	LDA	SQX
	STA	MOTHRX
	LDA	SQY
	STA	MOTHRY
	LDA	NOUNTS
	SEC
	SBC	#1
	STA	ARMY
LOOP9	JSR	PLACE1
	DEX
	CPX	NOBARS
	BCS	LOOP9
;
LOOP19	JSR	CHOSQ
	LDA	SQX
	SEC
	SBC	MOTHRX
	JSR	ABSVAL
	STA	TEMP1
	LDA	SQY
	SEC
	SBC	MOTHRY
	JSR	ABSVAL
	CLC
	ADC	TEMP1
	CMP	#12
	BCC	LOOP19
	CMP	#31
	BCS	LOOP19
;
	LDA	SQX
	SEC
	SBC	ROMEX
	JSR	ABSVAL
	STA	TEMP1
	LDA	SQY
	SEC
	SBC	ROMEY
	JSR	ABSVAL
	CLC
	ADC	TEMP1
	CMP	#12
	BCC	LOOP19
	CMP	#31
	BCS	LOOP19
;
	LDA	SQX
	STA	MOTHRX
	LDA	SQY
	STA	MOTHRY
	LDA	NOBARS
	SEC
	SBC	#1
	STA	ARMY
LOOP22	JSR	PLACE1
	DEX
	CPX	NOROMS
	BCS	LOOP22
;
	LDX	#81
	LDY	#60
	LDA	#106
	JSR	INDEFD
	LDA	#30
	JSR	STALL
LOOP53	LDA	CONSOL
	AND	#1
	BNE	LOOP53
;
	LDY	#54
	LDA	#31
	JSR	BLANKS
	LDA	#0
	STA	BUTMSK
;
;main game loop
;
LOOP32	LDX	NOUNTS
	DEX
	LDA	#0
	STA	BSTVAL
LOOP82	LDA	MOVFLG,X
	BNE	Y38
	LDA	OVRTIM,X
	BEQ	Y38
	CMP	BSTVAL
	BCC	Y38
	BNE	Y40
	LDY	RANDOM
	BMI	Y38
Y40	STX	BSTONE
	STA	BSTVAL
Y38	DEX
	BPL	LOOP82
	LDX	BSTONE
	LDA	BSTVAL
	BNE	Y76
;
	LDA	#$FF
	STA	BSTONE
	LDX	NOUNTS
	DEX
	LDA	#$FF
	STA	TEMP1
	STA	TEMP2
LOOP49	LDA	MOVFLG,X
	BNE	Y41
	LDA	EXECM,X
	CMP	TEMP2
	BCC	Y44
	BEQ	Y42
	BCS	Y41
Y42	LDA	EXECL,X
	CMP	TEMP1
	BCS	Y41
Y44	LDA	EXECM,X
	STA	TEMP2
	LDA	EXECL,X
	STA	TEMP1
	STX	BSTONE
Y41	DEX
	BPL	LOOP49
	LDX	BSTONE
	BPL	Y76
	LDA	#0
	LDX	NOUNTS
	DEX
LOOP84	STA	MOVFLG,X
	DEX
	BPL	LOOP84
;
;make tick sound
;
	LDA	#200
	STA	AUDF2
	LDA	#$A8
	STA	AUDC2
	LDA	#$6
	JSR	STALL
	LDA	#0
	STA	AUDC2
	JMP	LOOP32
;
Y76	STX	ARMY
	LDA	#$FF
	STA	MOVFLG,X
;
	LDA	CONSOL	;SELECT key pressed?
	AND	#2
	BNE	Y21
	JSR	WFRLS
	LDA	#$FF	;yes, mask out button
	STA	BUTMSK
	STA	PAUFLG
	LDA	#11
	LDY	#115
	JSR	DWORDS	;display 'PAUSE'
	LDA	#30
	JSR	STALL
	LDY	#$44
LOOP46	LDA	CONSOL	;wait for second press
	AND	#2
	BNE	LOOP46
	JSR	WFRLS
	LDA	#0
	STA	BUTMSK	;reenable button
	STA	PAUFLG
	LDY	#115
LOOP48	STA	TXTWDW,Y
	INY
	CPY	#125
	BNE	LOOP48
	LDA	#30
	JSR	STALL
	LDX	ARMY
Y21	LDA	CONSOL	;OPTION key pressed?
	AND	#4
	BNE	X84
	JSR	WFRLS
	LDA	#$FF
	STA	PAUFLG
	LDY	#$6A
	LDX	#147
	LDA	#176
	JSR	INDEFD
	LDA	#60
	JSR	STALL
LOOP62	LDA	CONSOL
	AND	#1
	BNE	Y78
	JSR	WFRLS
	LDA	#0
	STA	PAUFLG
	JSR	ERRCLR+5
	LDX	ARMY
	JMP	X84
Y78	LDA	CONSOL
	AND	#4
	BNE	LOOP62
	JSR	WFRLS
	LDA	#0
	STA	PAUFLG
	JSR	ERRCLR+5
	LDX	#15
	JMP	ENDGAM
X84	LDA	CSTRNG,X	;is unit alive?
	BEQ	Y16		;no, skip to next unit
	LDA	HMORDS,X	;any orders?
	BEQ	X93
	JMP	BLEAT
X93	CPX	NOROMS
	BCS	BARBAI
Y16	JMP	NXTRMY
;
;barbarian artificial intelligence
;
BARBAI	LDX	ARMY
	LDA	#0
	STA	BARDIR
	STA	BESTVL
	STA	BESTDR
	JSR	SETLAT
	LDA	#$FF
	STA	BRNGLO
	STA	BRNGHI
	STA	BOPP
	STA	COPP
	LDX	NOROMS
	DEX
LOOP60	LDA	CSTRNG,X
	BEQ	Y43
	JSR	FRANGE
	CMP	BRNGHI
	BEQ	X26
	BCS	Y43
	BCC	X32
X26	LDA	ACCLO
	CMP	BRNGLO
	BCC	X32
	BEQ	X31
	BCS	Y43
X31	LDA	RANDOM
	LSR	A
	BCC	Y43
X32	LDA	ACCLO
	STA	BRNGLO
	LDA	ACCHI
	STA	BRNGHI
	LDA	RANGE
	STA	BRANGE
	STX	DEFNDR
Y43	DEX
	BPL	LOOP60
;
	LDA	#0
	STA	PRODHI
	LDX	ARMY
	LDA	MSTRNG,X
	ASL	A
	ROL	PRODHI
	ASL	A
	ROL	PRODHI
	ASL	A
	ROL	PRODHI
	ASL	A
	ROL	PRODHI
	STA	PRODLO
	LDA	CSTRNG,X
	STA	DIVISR
	JSR	DIVIDE
	LDA	PRODLO
	STA	DIVRAT
	LDA	#0
	STA	PRODHI
	LDA	BRANGE
	ASL	A
	ADC	BRANGE
	ASL	A
	ROL	PRODHI
	ASL	A
	ROL	PRODHI
	ASL	A
	ROL	PRODHI
	ASL	A
	ROL	PRODHI
	STA	PRODLO
	LDA	BRANGE
	ADC	#1
	STA	DIVISR
	JSR	DIVIDE
	LDA	PRODLO
	STA	QUACKO
	LDA	#0
	STA	PRODHI
	LDA	TOTRMS
	ASL	A
	ROL	PRODHI
	ASL	A
	ROL	PRODHI
	ASL	A
	ROL	PRODHI
	ASL	A
	ROL	PRODHI
	STA	PRODLO
	LDA	TOTRCS
	STA	DIVISR
	JSR	DIVIDE
	LDA	PRODLO
	CLC
	ADC	QUACKO
	BCC	Y27
	LDA	#$FF
Y27	LDX	ARMY
	SEC
	SBC	AGGR,X
	BCS	Y35
	LDA	#0
Y35	CMP	DIVRAT
	BCS	LOOP24
;rest
	JMP	NXTRMY
;
LOOP24	LDA	#0
	STA	SQVAL
	LDX	ARMY
	LDY	BARDIR
	JSR	SETUP2
	JSR	TERR
	LDA	UNITNO
	BPL	OCCUPD
	LDA	TRNCOD
	CMP	#$C9
	BEQ	NEXTSQ
	CMP	#$4C
	BCC	X77
	CMP	#$50
	BCC	NEXTSQ
X77	LDX	DEFNDR
	JSR	FRANGE
	LDA	BRNGLO
	SEC
	SBC	ACCLO
	STA	ACCLO
	LDA	BRNGHI
	SBC	ACCHI
	BCS	Y39
;
	LDX	ARMY
	LDA	MSTRNG,X
	CMP	CSTRNG,X
	BNE	NEXTSQ
;
Y39	LDA	ACCLO
	CLC
	ADC	#$80
	STA	SQVAL
	BNE	NEXTSQ
;
OCCUPD	CMP	NOROMS
	BCS	NEXTSQ
	TAX
	LDA	CSTRNG,X
	STA	COPP
	LDA	#$FF
	STA	SQVAL
;
NEXTSQ	LDA	SQVAL
	CMP	BESTVL
	BCC	Y6
	BNE	Y37
	LDX	COPP
	CPX	BOPP
	BCS	Y6
	STX	BOPP
	BCC	Y37
Y46	LDA	RANDOM
	LSR	A
	BCS	Y6
	LDA	SQVAL
Y37	STA	BESTVL
	LDA	BARDIR
	STA	BESTDR
Y6	LDX	BARDIR
	INX
	STX	BARDIR
	CPX	#4
	BEQ	Y7
	JMP	LOOP24
;
Y7	LDA	BESTVL
	BNE	Y66
	JMP	NXTRMY
Y66	LDX	ARMY
	LDA	BESTDR
	STA	WHORDS,X
	LDA	#1
	STA	HMORDS,X
	LDA	#$FF
	STA	NEWOFG,X
;
BLEAT	LDA	NEWOFG,X
	BEQ	X76
	LDA	#0
	STA	NEWOFG,X
	JMP	DINGO
X76	LDA	WHORDS,X
	AND	#3
	STA	SAVORD
	CLC
	ADC	#5
	STA	ARRPTR
	ADC	#$80
	CPX	NOROMS
	BCS	X94
	ADC	#$40
X94	PHA
	JSR	SWITCH
	LDA	SWAP,X
	STA	SAVCHR
	PLA
	STA	SWAP,X
	JSR	SWITCH
	LDA	#$49
	STA	AUDCTR
	LDA	#200
	STA	AUDF2
	LDA	#220
	STA	AUDF3
	LDA	ARRPTR
	ASL	A
	ASL	A
	ASL	A
	STA	ARRPTR
	TAX
	LDY	#0
LOOP72	LDA	CHRSET,X
	STA	SAVER,Y
	INY
	INX
	TXA
	AND	#7
	BNE	LOOP72
LOOP16	LDX	ARRPTR
	LDA	SAVORD
	BNE	Y77
LOOP73	LDA	CHRSET+1,X
	STA	CHRSET,X
	INX
	TXA
	AND	#7
	BNE	LOOP73
	BEQ	Y74
Y77	CMP	#1
	BNE	Y72
LOOP74	LSR	CHRSET,X
	INX
	TXA
	AND	#7
	BNE	LOOP74
	BEQ	Y74
Y72	CMP	#2
	BNE	Y73
	TXA
	CLC
	ADC	#6
	TAX
LOOP75	LDA	CHRSET,X
	STA	CHRSET+1,X
	DEX
	TXA
	AND	#7
	CMP	#7
	BNE	LOOP75
	LDA	#0
	STA	CHRSET+1,X
	BEQ	Y74
Y73	ASL	CHRSET,X
	INX
	TXA
	AND	#7
	BNE	Y73
Y74	LDA	AUDCTR
	STA	AUDC2
	STA	AUDC3
	LDA	#1
	JSR	STALL
	DEC	AUDCTR
	LDA	AUDCTR
	CMP	#$3F
	BEQ	Y75
	LSR	A
	BCS	LOOP16
	BCC	Y74
Y75	LDX	ARMY
	JSR	SWITCH
	LDX	ARRPTR
	LDY	#0
LOOP76	LDA	SAVER,Y
	STA	CHRSET,X
	INY
	INX
	TXA
	AND	#7
	BNE	LOOP76
;
	LDA	#3
	JSR	STALL
	LDX	ARMY
	LDA	SAVCHR
	STA	SWAP,X
	JSR	SWITCH
	LDA	EXECM,X
	BNE	JMPNT
	LDA	EXECL,X
	BNE	JMPNT
	CPX	NOROMS
	BCS	X48
	CPX	UNIT
	BEQ	JMPNT
X48	LDA	#0
	STA	OVRTIM,X
	JSR	SETUP
	JSR	TERR
	LDA	TRNCOD
	CMP	#$C9
	BEQ	JMPNT
	CMP	#$4C
	BCC	X50
	CMP	#$50
	BCC	JMPNT
;
X50	LDA	UNITNO	;anybody in square?
	BMI	DOMOVE
	CMP	NOROMS	;yes. which side?
	BCC	ROMAN
	LDA	ARMY	;barbarian
	CMP	NOROMS
	BCC	COMBAT
	LDX	UNITNO
	LDA	HMORDS,X
	BNE	JMPNT
	JMP	BARBAI	;traffic jam, try again
ROMAN	LDA	ARMY
	CMP	NOROMS
	BCS	COMBAT
JMPNT	JMP	NXTRMY
COMBAT	JSR	COMBT
	LDA	VICFLG
	BEQ	JMPNT
DOMOVE	LDX	ARMY
	JSR	SWITCH
	JSR	SETUP
	LDA	LAT
	STA	UNITY,X
	LDA	LONG
	STA	UNITX,X
	JSR	SWITCH
	DEC	HMORDS,X
	BPL	Y88
	LDA	#0
	STA	HMORDS,X
Y88	BEQ	JMPNT
	LSR	WHORDH,X
	ROR	WHORDS,X
	LSR	WHORDH,X
	ROR	WHORDS,X
;
;figure next execution time
;
DINGO	JSR	SETUP
	JSR	TERR
	LDA	TRNCOD
	JSR	ALTUD
	STA	HOLD
	LDX	ARMY
	JSR	SETLAT
	JSR	ALTUD
	SEC
	SBC	HOLD
	JSR	INVERT
	CLC
	ADC	#$60
	STA	MULTPR
	LDX	ARMY
	LDA	SLOW,X
	STA	DIVISR
	JSR	MULTIA
	LSR	PRODHI
	ROR	PRODLO
	LSR	PRODHI
	ROR	PRODLO
	LDA	PRODLO
	LDX	ARMY
	STA	EXECL,X
	LDA	PRODHI
	STA	EXECM,X
;
NXTRMY	JSR	CALTCS
	LDA	IRCS
	SEC
	SBC	TOTRMS
	STA	TEMP1
	LDA	IBCS
	SEC
	SBC	TOTBMS
	LSR	A
	SEC
	SBC	TEMP1
	LDY	#157
	BCC	ULOSE
	BCS	Y18
ULOSE	JSR	INVERT
	PHA
	LDA	#13
	STA	TXTWDW,Y
	PLA
	INY
Y18	JSR	DNUMBR
	LDA	#0
	STA	TXTWDW,Y
	LDX	NOUNTS
	DEX
LOOP39	LDA	CSTRNG,X
	BNE	Y19
	DEX
	CPX	NOROMS
	BCS	LOOP39
	LDX	#14
	JMP	ENDGAM
Y19	LDX	#13
	LDA	CSTRNG
	BEQ	ENDGAM
;
	JMP	LOOP32
;
;end of main game loop
;
	LDA	#$FF
	STA	BUTMSK
ENDGAM	STX	TEMP2
	LDY	#$6D
	LDX	#106
	LDA	#122
	JSR	INDEFD
	LDA	TEMP2
	JSR	DWORDS
	LDY	#12
	LDX	#122
	LDA	#147
	JSR	INDEFD
LOOP57	LDA	CONSOL
	AND	#1
	BNE	LOOP57
	STA	ATRACT
;
;halt VBI processing
;
RESTART	LDX	#XITVBV/256
	LDY	#XITVBV&$FF
	LDA	#7
	JSR	SETVBV
;
;reset characters
;
	LDX	#$1F
LOOP51	LDA	IARRTB,X
	STA	CHRSET+$28,X
	DEX
	BPL	LOOP51
;
;this routine clears the map of any remaining units
;
	LDX	NOUNTS
	DEX
LOOP1	LDA	SWAP,X
	AND	#$3F
	BEQ	X33
	CMP	#11
	BCC	X38
X33	JSR	SWITCH	;unit is still on the map
X38	DEX
	BPL	LOOP1
;
	JMP	INIT
;
SETDLI	LDA	VCOUNT
	CMP	#11
	BCS	SETDLI	;wait for proper time
	LDA	#DLI1&$FF	;DLI vector low byte
	STA	DLIVEC
	LDA	#DLI1/256
	STA	DLIVEC+1
	LDA	#$C0
	STA	NMIEN	;Turn interrupts on
	RTS
	END
;LEGIONNAIRE V22T TABLE  MAY 22, 1982
	ORG	$64FF
;
;The map data goes here.
;
MAPDAT	DB	201,201,201,201,201,201,201,201,201
	DB	201,201,201,201,201,201,201,201
	DB	201,201,201,201,201,201,201,201
	DB	201,201,201,201,201,201,201,201
	DB	201,201,201,201,201,201,201,201
	DB	201,201,201,201,201,201,201,201
	DB	201,0,0,0,0,46,54,52
	DB	62,0,0,0,0,0,24,0
	DB	0,0,0,80,120,0,0,0
	DB	0,104,112,113,114,96,0,25
	DB	0,0,0,0,0,0,0,0
	DB	0,0,0,0,0,0,0,201
	DB	201,0,0,41,49,35,0,0
	DB	22,51,61,0,0,0,20,53
	DB	50,57,0,0,84,114,112,125
	DB	0,89,0,0,0,44,51,37
	DB	0,0,0,0,0,0,0,0
	DB	0,0,0,0,0,0,0,201
	DB	201,0,0,28,108,115,119,117
	DB	122,0,26,0,0,0,0,0
	DB	0,22,54,50,49,61,0,81
	DB	115,102,0,45,52,33,0,0
	DB	0,0,0,0,0,0,0,0
	DB	0,0,78,0,0,0,0,201
	DB	201,0,46,33,92,170,190,0
	DB	90,0,29,76,77,0,0,0
	DB	78,0,0,0,0,20,54,62
	DB	0,46,54,38,0,0,0,0
	DB	0,0,41,54,56,0,0,0
	DB	0,0,0,0,0,0,0,201
	DB	201,0,25,0,93,146,165,0
	DB	93,0,27,0,0,0,0,0
	DB	0,0,0,0,0,0,0,23
	DB	53,34,0,0,0,0,0,0
	DB	77,0,26,0,17,62,0,0
	DB	0,76,0,79,0,0,0,201
	DB	201,0,30,0,86,125,0,110
	DB	98,0,31,0,0,0,0,0
	DB	0,42,51,48,63,0,0,0
	DB	0,0,0,0,0,0,0,0
	DB	0,0,28,0,0,30,0,0
	DB	0,0,0,76,0,0,0,201
	DB	201,0,19,60,0,86,115,99
	DB	0,45,38,0,0,0,0,46
	DB	55,36,0,0,22,53,62,0
	DB	0,0,0,0,0,79,77,76
	DB	0,0,24,0,0,19,49,54
	DB	60,0,0,0,0,0,0,201
	DB	201,0,0,21,62,0,0,0
	DB	0,28,0,0,46,55,53,39
	DB	0,105,113,118,112,124,26,0
	DB	0,0,0,78,0,0,0,0
	DB	41,53,34,106,126,0,0,0
	DB	20,59,0,0,0,0,0,201
	DB	201,0,0,0,23,54,49,50
	DB	55,37,0,0,29,0,0,107
	DB	114,99,0,0,0,94,30,0
	DB	0,0,0,0,0,41,50,48
	DB	37,109,115,102,82,117,122,0
	DB	0,21,58,0,0,0,0,201
	DB	201,0,0,0,0,0,0,0
	DB	0,0,0,43,32,109,112,101
	DB	168,177,179,190,104,96,25,0
	DB	0,0,0,0,45,35,105,118
	DB	114,100,169,177,189,0,80,120
	DB	0,0,26,0,0,0,0,201
	DB	201,0,0,0,0,0,0,0
	DB	0,0,47,35,110,96,173,178
	DB	167,0,174,161,92,41,37,0
	DB	0,0,0,47,36,104,98,174
	DB	180,182,163,0,155,0,0,90
	DB	0,0,29,0,0,0,0,201
	DB	201,0,77,0,0,0,0,0
	DB	0,41,37,104,98,170,160,0
	DB	171,180,165,108,100,29,0,0
	DB	0,0,0,29,0,93,171,162
	DB	237,253,0,168,166,0,0,88
	DB	0,42,33,0,0,0,0,201
	DB	201,0,0,0,0,0,0,0
	DB	0,24,106,103,0,149,176,182
	DB	166,110,113,102,0,31,0,0
	DB	0,0,46,39,110,97,149,187
	DB	212,229,170,161,0,0,111,103
	DB	0,30,0,0,0,0,0,201
	DB	201,0,0,0,79,0,0,0
	DB	0,30,86,126,0,0,0,0
	DB	109,99,0,0,46,38,0,0
	DB	0,0,31,0,84,122,0,146
	DB	176,179,165,0,0,0,94,0
	DB	0,25,0,0,0,0,0,201
	DB	201,0,78,0,76,0,0,0
	DB	40,39,0,90,0,0,106,115
	DB	98,0,45,55,33,0,0,0
	DB	0,0,19,58,0,92,0,0
	DB	0,0,0,0,0,105,96,0
	DB	45,34,0,0,0,0,0,201
	DB	201,0,0,0,0,0,0,0
	DB	26,111,116,97,0,0,90,0
	DB	0,42,36,0,0,0,0,0
	DB	0,0,0,26,0,83,115,112
	DB	119,123,0,0,108,101,0,44
	DB	35,0,0,0,0,47,49,201
	DB	201,0,0,77,0,0,0,41
	DB	38,94,169,176,181,186,92,0
	DB	0,29,0,0,0,79,0,0
	DB	0,0,0,22,57,0,0,0
	DB	0,81,113,116,99,0,43,39
	DB	0,0,0,42,50,35,0,201
	DB	201,0,0,0,0,0,0,27
	DB	108,102,159,235,249,154,89,0
	DB	0,27,0,77,0,0,0,0
	DB	0,0,0,0,21,52,49,55
	DB	61,0,0,0,0,41,32,0
	DB	0,0,46,39,104,118,115,201
	DB	201,0,0,0,0,0,42,33
	DB	88,173,163,221,218,158,81,123
	DB	0,24,0,0,0,76,0,0
	DB	0,0,0,0,0,0,0,0
	DB	16,57,0,46,50,37,0,0
	DB	43,52,33,109,96,174,178,201
	DB	201,0,0,0,0,0,28,0
	DB	95,155,238,227,216,146,189,89
	DB	0,30,0,0,0,0,0,0
	DB	0,0,0,0,76,0,76,77
	DB	0,23,54,36,0,0,78,0
	DB	27,107,114,100,0,149,180,201
	DB	201,0,0,0,0,0,29,0
	DB	94,152,212,253,209,254,153,86
	DB	126,22,49,62,0,0,0,77
	DB	0,0,0,0,78,0,0,0
	DB	0,0,0,0,0,0,0,45
	DB	38,86,117,116,113,121,0,201
	DB	201,0,0,0,0,0,17,58
	DB	91,147,188,214,241,226,148,190
	DB	83,114,121,28,78,0,0,0
	DB	0,0,0,0,0,0,0,0
	DB	0,0,0,0,0,0,0,19
	DB	53,62,0,0,0,85,119,201
	DB	201,0,0,41,49,54,57,25
	DB	82,126,145,177,187,0,170,161
	DB	0,110,97,26,0,0,78,77
	DB	0,76,0,0,0,0,0,0
	DB	0,0,0,0,0,0,0,0
	DB	0,20,51,54,63,0,0,201
	DB	201,0,46,33,110,126,26,19
	DB	61,86,115,125,150,180,166,0
	DB	106,102,46,32,0,0,0,0
	DB	0,0,0,0,0,0,0,0
	DB	0,0,0,0,0,0,0,0
	DB	0,0,0,0,16,48,54,201
	DB	201,0,27,0,83,99,24,0
	DB	16,54,57,84,112,117,116,113
	DB	98,0,29,0,0,0,0,78
	DB	0,0,0,41,52,49,59,0
	DB	0,0,0,0,0,0,0,0
	DB	0,0,0,0,0,0,0,201
	DB	201,0,16,63,0,43,36,0
	DB	0,0,23,60,0,0,0,0
	DB	0,0,22,53,62,0,0,0
	DB	0,0,45,36,0,0,24,0
	DB	0,0,0,0,0,0,0,41
	DB	49,54,52,50,58,0,0,201
	DB	201,0,0,19,50,38,0,0
	DB	0,0,0,18,56,0,0,0
	DB	0,0,0,0,21,61,0,0
	DB	0,0,25,108,117,126,27,0
	DB	0,0,0,0,79,46,54,35
	DB	0,0,0,0,21,60,0,201
	DB	201,0,0,0,0,0,76,0
	DB	0,0,0,0,20,58,0,0
	DB	109,116,121,0,0,19,58,0
	DB	0,46,39,92,105,102,30,0
	DB	0,0,78,0,0,29,109,114
	DB	117,115,113,125,0,26,0,201
	DB	201,0,0,0,0,0,0,0
	DB	0,0,0,0,46,35,107,115
	DB	103,0,87,117,123,0,18,50
	DB	48,37,0,86,100,47,34,0
	DB	0,0,77,0,44,36,91,175
	DB	179,177,189,90,0,29,0,201
	DB	201,0,0,0,0,0,0,0
	DB	0,0,0,0,26,0,88,0
	DB	170,186,0,0,86,115,118,112
	DB	122,0,0,0,43,32,0,0
	DB	0,0,0,45,38,106,102,156
	DB	0,0,158,88,0,30,0,201
	DB	201,0,0,0,0,79,0,0
	DB	0,0,0,0,17,59,82,125
	DB	146,166,0,0,0,173,180,184
	DB	89,0,42,48,35,0,0,0
	DB	76,0,42,32,110,96,0,149
	DB	180,182,165,93,0,25,0,201
	DB	201,53,50,48,62,0,0,0
	DB	0,0,77,0,0,29,0,85
	DB	117,118,114,112,125,147,181,161
	DB	93,0,31,0,0,0,78,0
	DB	0,0,26,0,95,0,0,105
	DB	119,112,116,103,42,34,0,201
	DB	201,0,0,0,19,57,0,0
	DB	0,0,0,0,0,19,48,53
	DB	62,0,0,0,84,116,119,113
	DB	99,45,36,0,77,0,0,0
	DB	0,0,24,108,98,0,111,101
	DB	47,55,51,48,37,0,0,201
	DB	201,114,116,122,0,20,55,51
	DB	63,0,0,0,0,0,0,0
	DB	16,54,50,58,0,0,46,49
	DB	55,33,0,0,0,0,79,0
	DB	0,43,35,89,0,104,97,41
	DB	39,0,0,0,0,0,0,201
	DB	201,0,0,83,126,0,0,0
	DB	17,48,56,0,0,0,0,0
	DB	0,0,0,19,51,53,37,0
	DB	0,0,0,0,0,0,0,0
	DB	0,28,0,94,0,92,40,33
	DB	0,0,0,0,0,0,0,201
	DB	201,178,180,188,87,117,124,0
	DB	0,0,22,54,49,58,0,0
	DB	0,0,0,0,76,0,0,0
	DB	0,0,0,0,0,0,0,0
	DB	0,30,0,86,118,99,31,0
	DB	0,0,77,0,76,0,0,201
	DB	201,241,250,147,190,0,85,113
	DB	119,115,123,0,0,23,52,53
	DB	59,0,0,0,0,0,0,0
	DB	0,0,0,0,0,0,0,0
	DB	0,22,49,53,52,50,36,0
	DB	0,0,0,0,0,0,0,201
	DB	201,0,209,251,150,186,0,0
	DB	0,0,84,125,0,0,0,0
	DB	16,55,60,0,0,0,0,0
	DB	0,0,0,0,0,0,0,0
	DB	0,0,0,0,0,0,0,0
	DB	0,0,0,79,0,0,0,201
	DB	201,0,0,221,0,156,0,0
	DB	0,0,0,89,0,0,0,0
	DB	0,0,26,0,0,0,0,0
	DB	0,0,0,0,0,0,0,0
	DB	0,0,0,0,0,0,0,0
	DB	0,0,0,0,0,0,0,201
	DB	201,201,201,201,201,201,201,201
	DB	201,201,201,201,201,201,201,201
	DB	201,201,201,201,201,201,201,201
	DB	201,201,201,201,201,201,201,201
	DB	201,201,201,201,201,201,201,201
	DB	201,201,201,201,201,201,201,201,201
STKTAB	DB	$FF,$FF,$FF,$FF,$FF,$FF,$FF,1
	DB	$FF,$FF,$FF,3,$FF,2,0,$FF
ARRTAB	DB	$10,$38,$54,$92
	DB	$10,$10,$10,$10
	DB	8,4,2,$FF
	DB	2,4,8,0
	DB	16,16,16,16
	DB	$92,$54,$38,16
	DB	$10,$20,$40,$FF
	DB	$40,$20,$10,0
ISWAP	DB	195,193,193,194,194
	DB	194,194,194,194,194
	DB	132,132,132,132
	DB	132,132,132,132
	DB	138,138,138,138
	DB	138,138,138,138
ILDR	DB	25,40,40,60,80
	DB	60,60,30,80,100
	DB	100,100,200,90
	DB	70,150,90,40
	DB	100,70,60,100
	DB	40,30,70,60
ISTRNG	DB	200,100,90,150,140
	DB	130,120,100,110,100
	DB	80,200,200,150
	DB	200,150,200,120
	DB	60,120,120,120
	DB	120,100,100,150
ISLOW	DB	20,15,15,45,40
	DB	45,40,30,50,40
	DB	50,60,50,60
	DB	60,60,30,40
	DB	20,15,20,15
	DB	12,8,20,8
IBRK	DB	0,0,1,0,2
	DB	2,1,0,1,3
	DB	0,3,0,2
	DB	1,0,0,0
	DB	0,1,2,0
	DB	2,3,0,0
IDTOM	DB	3,2,3,3,1
	DB	2,2,3,1,1
	DB	0,1,0,1
	DB	2,0,3,3
	DB	0,2,2,2
	DB	2,1,3,3
IAGGR	DB	0,0,0,0,0
	DB	0,0,0,0,0
	DB	8,14,12,16
	DB	18,12,12,16
	DB	8,16,18,20
	DB	14,12,16,16
ISTAM	DB	4,4,4,8,12
	DB	12,12,4,16,16
	DB	24,16,16,16
	DB	48,8,8,8
	DB	24,10,20,16
	DB	16,10,8,4
IOFFS	DB	$FF,$FF,$FF,$C0,$FF
	DB	$D0,$FF,$FF,$80,$E0
	DB	$FF,$FF,$FF,$FF
	DB	$FF,$FF,$40,$FF
	DB	$FF,$40,$FF,$FF
	DB	$FF,$FF,$FF,$FF
IDEFS	DB	$FF,$80,$80,$FF,$C0
	DB	$D0,$FF,$FF,$FF,$C0
	DB	$FF,1,$FF,$FF
	DB	$FF,$FF,$FF,$FF
	DB	$FF,$FF,$FF,$FF
	DB	1,$FF,$FF,$FF
ISIDS	DB	$FF,$80,$80,$FF,$C0
	DB	$D0,$D0,$D0,$D0,$FF
	DB	$D0,$D0,$D0,1
	DB	$D0,$D0,$D0,$D0
	DB	$C0,$C0,1,$C0
	DB	$C0,$C0,$C0,$FF
SC2TAB	DB	$A8,$A8,$A8,$A8
	DB	$A7,$A7,$A7,$A7
	DB	$A6,$A6,$A6,$A6
	DB	$A5,$A5,$A5,$A5
SC3TAB	DB	$AC,$AC,$AB,$AB
	DB	$AA,$AA,$A9,$A9
	DB	$A8,$A8,$A7,$A7
	DB	$A6,$A6,$A5,$A5
SC4TAB	DB	$AF,$AE,$AD,$AC
	DB	$AB,$AA,$A9,$A8
	DB	$A7,$A6,$A5,$A4
	DB	$A3,$A2,$A1,$A0
CHRBUF	DB	$55,$AA,$55,$AA
	DB	$55,$AA,$55,$AA
	DB	$AA,$55,$AA,$55
	DB	$AA,$55,$AA,$55
BITTAB	.BYTE	$C0,3,$C,$30
IDLIST	DB	$70,$70,$70
	DB	$C6,$E0,$64
	DB	$B0
	DB	$77,$FE,$64
	DB	$77,$2E,$65
	DB	$77,$5E,$65
	DB	$77,$8E,$65
	DB	$77,$BE,$65
	DB	$77,$EE,$65
	DB	$77,$1E,$66
	DB	$77,$4E,$66
	DB	$77,$7E,$66
	DB	$57,$AE,$66
	DB	$90
	DB	$C2,$80,$64
	DB	$90,$02,$90
	DB	$C2,$50,$64
	DB	$90
	DB	$41,$00,$64
;
ZPVAL	DB	0,$64,0,0,0,$22,1,$30,2
PSXVAL	DB	$E0,0,0,$33,$78
	DB	0,0
COLTAB	DB	$FF,$E,$9C,0,$1C,$C8,$98,$4A,$36
INDEFM	DB	'HOW MANY LEGIONS FOR YOU? 5'
	DB	'COPYRIGHT  1982'
	DB	'THE AVALON HILL GAME COMPANY'
	DB	'LEGIONNAIRE'
	DB	'PRESS START TO BEGIN PLAY'
	DB	'GAME OVER---YOU '
	DB	'PRESS START TO PLAY AGAIN'
	DB	'OPTION=>QUIT, START=>CONTINUE'
	DB	'FIRST TRIBE IS: '
	DB	'SECOND TRIBE IS: '
IARRTB	DB	0,0,0,0,0,$10,$38,$7C
	DB	0,$80,$C0,$E0,$C0,$80,0,0
	DB	$7C,$38,$10,0,0,0,0,0
	DB	0,1,3,7,3,1,0,0
UNITX	ORG	*+30
UNITY	ORG	*+30
MSTRNG	ORG	*+30
CSTRNG	ORG	*+30
HMORDS	ORG	*+30
WHORDS	ORG	*+30
WHORDH	ORG	*+30
EXECL	ORG	*+30
EXECM	ORG	*+30
NEWOFG	ORG	*+30
LEADER	ORG	*+30
TIMINC	ORG	*+30
SWAP	ORG	*+30
SLOW	ORG	*+30
DTOM	ORG	*+30
BRKTHT	ORG	*+30
TYPE	ORG	*+30
AGGR	ORG	*+30
STAM	ORG	*+30
OFFS	ORG	*+30
DEFS	ORG	*+30
SIDS	ORG	*+30
MOVFLG	ORG	*+30
OVRTIM	ORG	*+30
;LEGIONNAIRE V22I INTERRUPT MODULE MAY 22, 1982
;
;the include of the data module goes here
;
	INCLUDE	D4:LEG22S.ASM
;
;This is the vertical blank interrupt routine
;It reads the joystick and scrolls the screen
;
	ORG	$5800
VBISR	LDA	TRIG1	;check for break button
	BNE	A31
	BEQ	A31	;NOP this out to restore break capability
;
;this is the debugging routine
;
	LDY	#1	;reset 60 Hertz vector
	LDX	#233
	LDA	#7
	JSR	SETVBV
	LDA	#0
	STA	GRACTL
	STA	$D00D
	STA	$D00E
	STA	$D00F
	LDA	#$22
	STA	SDMCTL
	LDA	#$20
	STA	DLSTLO
	LDA	#$9C
	STA	DLSTHI
	LDA	#$40
	STA	NMIEN
	LDA	#$C
	STA	COLOR1
	LDA	#$84
	STA	$2C6
	LDA	#0
	STA	COLOR4
	BRK
;
;
A31	LDA	PAUFLG
	BNE	Y17
	LDX	NOUNTS	;decrement rally clocks
	DEX
LOOP14	LDA	CSTRNG,X
	BEQ	Y70
	LDA	RTCLKL
	LSR	A
	BCC	X91	;only every other frame
	LDA	HMORDS,X
	BNE	X91
	DEC	TIMINC,X
	LDA	TIMINC,X
	CMP	#$FF
	BNE	X91
	INC	TIMINC,X
	LDA	CSTRNG,X
	CMP	MSTRNG,X
	BEQ	X91
	INC	CSTRNG,X
	LDA	LEADER,X
	STA	TIMINC,X
	JMP	Y70
;
X91	LDA	EXECL,X
	SEC
	SBC	#1
	STA	EXECL,X
	LDA	EXECM,X
	SBC	#0
	STA	EXECM,X
	BCS	Y71
	INC	OVRTIM,X
	LDA	#0
	STA	EXECL,X
	STA	EXECM,X
	BEQ	Y70
;
;tire walking units
;
Y71	LDA	RANDOM
	CMP	STAM,X
	BCS	Y70
	LDA	RANDOM
	CMP	#$10
	BCS	Y70
	DEC	CSTRNG,X
	BNE	Y70
	INC	CSTRNG,X
;
Y70	DEX
	BPL	LOOP14
;
;animates border character
;
Y17	LDA	RTCLKL
	AND	#3
	BNE	Y30
	LDA	RTCLKL
	LDX	#7
	AND	#4
	BNE	Y31
	LDX	#15
Y31	LDY	#7
LOOP54	LDA	CHRBUF,X
	STA	CHRSET+72,Y
	DEX
	DEY
	BPL	LOOP54
;
Y30	LDA	TRIG0	;button status
	ORA	BUTMSK	;button allowed?
	BEQ	X17
	LDA	BUTFLG	;no button now; previous status
	BNE	X23
	JMP	NOBUT
X23	LDA	#0	;button just released
	STA	BUTFLG
	STA	KRZFLG
	STA	AUDC1
	LDX	#$30
LOOP8	STA	TXTWDW+48,X	;clear text window
	DEX
	BPL	LOOP8
	STX	PCOLR0	;reset cursor color
	LDA	#8
	STA	DELAY
	CLC
	ADC	RTCLKL
	STA	TIMSCL
	LDA	#$FF
	STA	UNIT
	JSR	CLRP1
	JSR	CLRP2
	JSR	ERRCLR
	JMP	ENDISR
X17	STA	ATRACT	;button is pressed
	LDA	STICK
	AND	#$F
	EOR	#$F
	BEQ	X20	;joystick active?
	JMP	ORDERS	;yes
X20	STA	DBTIMR	;no, set debounce
	STA	AUDC1
	STA	STKFLG
	LDA	BUTFLG
	BNE	BUTHLD	;is this the first button pass
	JMP	FBUTPS	;yes
BUTHLD	JSR	ERRCLR	;no, clear errors
	LDX	UNIT
	BMI	X90
	JSR	DSTATS
	INC	PCOLR0
	INC	PCOLR2
	LDA	HITFLG
	BEQ	X63	;anybody in the window?
X90	JMP	ENDISR	;no
X63	LDA	CH
	CMP	#$21
	BNE	X80	;space bar pressed?
	LDX	UNIT	;yes, check for barbarian
	CPX	NOROMS
	BCS	X80
	LDA	#0
	STA	CH
	DEC	HMORDS,X
	BPL	X42
	INC	HMORDS,X
X42	LDA	HMORDS,X
	STA	HOWMNY
	LDA	#0
	STA	STPCNT
	LDA	#1
	STA	ORDCNT
	JSR	CLRP1
	JSR	CLRP2
	LDA	BASEX
	STA	STEPX
	LDA	BASEY
	STA	STEPY
X80	LDA	RTCLKL
	AND	#1
	BEQ	X54	;time to move arrow?
	JMP	ENDISR	;no
X54	LDY	HOWMNY	;yes
	BNE	X65 ;any orders to show?
	JMP	PCURSE	;no, go ahead to maltakreuze
X65	JSR	CLRP1	;yes, clear old arrow
	LDA	ORDCNT
	LDX	#0	;assume first byte
	CMP	#5
	BCC	X52	;second byte or first?
	INX		;second	byte
X52	AND	#3	;isolate bit pair index
	TAY
	LDA	BITTAB,Y	;get mask
	AND	ORD1,X	;get orders
;
;right justify orders
;
	DEY
	BPL	X51
	LDY	#3
X51	BEQ	X53
LOOP21	LSR	A
	LSR	A
	DEY
	BNE	LOOP21
X53	STA	ARRNDX
	ASL	A
	ASL	A
	ASL	A
;get arrow image and store it to player RAM
	TAX
	LDY	STEPY
LOOP44	LDA	ARRTAB,X
	CPY	#$80
	BCS	X43
	STA	PLYR1,Y
X43	INX
	INY
	TXA
	AND	#7
	BNE	LOOP44
;
	LDA	STEPX	;position arrow
	STA	HPOSP1
;
;now step arrow
;
	LDX	ARRNDX
	LDA	STEPX
	CLC
	ADC	XADD,X
	STA	STEPX
	LDA	STEPY
	CLC
	ADC	YADD,X
	STA	STEPY
;
	INC	STPCNT	;next step
	LDA	STPCNT
	AND	#7
	BNE	X59	;if not done end ISR
	STA	STPCNT	;end of steps
	INC	ORDCNT	;next order
	LDA	ORDCNT
	CMP	HOWMNY	;last order?
	BCC	X59	;no, out
	BEQ	X59 ;no, out
	LDA	#1
	STA	ORDCNT	;yes, reset to start of arrow's path
;
;display maltese cross ('maltakreuze' or KRZ)
;
PCURSE	LDY	STEPY
	STY	KRZY
	LDA	#$FF
	STA	KRZFLG
	LDA	STEPX
	SEC
	SBC	#1
	STA	KRZX
	JSR	DSPKRZ
	JSR	CLRP1	;clear arrow
	LDA	BASEX	;reset arrow's coords
	STA	STEPX
	LDA	BASEY
	STA	STEPY
;
X59	JMP	ENDISR
;
;FIRST BUTTON PASS
;looks for a unit inside cursor
;if there is one, puts unit info into text window
;
FBUTPS	LDA #$FF
	STA	BUTFLG
;
;first get coords of center of cursor (map frame)
;
	LDA	CURSXL
	CLC
	ADC	#6
	STA	TXL
	LDA	CURSXH
	ADC	#0
	STA	TXH
	LDA	CURSYL
	CLC
	ADC	#9
	STA	TYL
	LDA	CURSYH
	ADC	#0
	STA	TYH
	LDA	TXH
	LSR	A
	LDA	TXL
	ROR	A
	LSR	A
	LSR	A
;
;coords of cursor (pixel frame)
;
	STA	CHUNKX
	LDA	#46
	SEC
	SBC	CHUNKX
	STA	CHUNKX
	LDA	TYH
	LSR	A
	TAX
	LDA	TYL
	ROR	A
	TAY
	TXA
	LSR	A
	TYA
	ROR	A
	LSR	A
	LSR	A
	STA	CHUNKY
	LDA	#$27
	SEC
	SBC	CHUNKY
	STA	CHUNKY
;
;now look for a match with unit coordinates
;
	LDX	NOUNTS
	DEX
LOOP6	CMP	UNITY,X
	BEQ	MAYBE
X16	DEX
	BPL	LOOP6
	STX	UNIT	;no match obtained
	STX	HITFLG
	JMP	ENDISR
;
MAYBE	LDA	CHUNKX
	CMP	UNITX,X
	BNE	X35
	LDA	CSTRNG,X
	BNE	MATCH
X35	LDA	CHUNKY
	JMP	X16
;
;match obtained
;
MATCH	LDA	#0
	STA	CH
	STA	HITFLG	;note match
;
;display unit specs
;
	STX	UNIT
	JSR	DSTATS
	LDA	UNIT
	CMP	NOROMS
	BCC	X79	;barbarian?
	LDA	#$FF	;yes, mask orders and exit
	STA	HITFLG
	BMI	X75
;
;Roman unit
;set up orders display
;first calculate starting coords (BASEX, BASEY)
;
X79	LDA	#1
	STA	ORDCNT
	LDA	#0
	STA	STPCNT
;
	LDA	TXL
	AND	#7
	CLC
	ADC	#1
	CLC
	ADC	SHPOS0
	STA	BASEX
	STA	STEPX
;
	LDA	TYL
	AND	#$F
	LSR	A
	SEC
	SBC	#1
	CLC
	ADC	SCY
	STA	BASEY
	STA	STEPY
;
;now set up page 6 values
;
	LDX	UNIT
	LDA	HMORDS,X
	STA	HOWMNY
	LDA	WHORDS,X
	STA	ORD1
	LDA	WHORDH,X
	STA	ORD2
X75	JMP	ENDISR
;
;ORDERS INPUT ROUTINE
;
ORDERS	LDA	STKFLG
	BNE	X75
	LDX	UNIT
	CPX	NOROMS
	BCC	X64	;barbarian?
	LDX	#0	;yes, error
	JMP	SQUAWK
X64	LDA	HMORDS,X
	CMP	#8
	BCC	X66	;only 8 orders allowed
	LDX	#$20
	JMP	SQUAWK
X66	LDA	KRZFLG
	BNE	X67	;must wait for maltakreuze
	LDX	#$40
	JMP	SQUAWK
X67	INC	DBTIMR
	LDA	DBTIMR	;wait for debounce time
	CMP	#$10
	BCS	X68
	BCC	X75
X68	LDA	#0
	STA	DBTIMR	;reset debounce timer
	LDX	STICK
	LDA	STKTAB,X
	BPL	X69
	LDX	#$60	;no diagonal orders allowed
	JMP	SQUAWK
;
;OK, this is a good order
;
X69	TAY
	STA	STICKI
	LDA	BEEPTB,Y
	STA	AUDF1	;'BEEP!'
	LDA	#$A8
	STA	AUDC1
	LDA	#$FF
	STA	STKFLG
;
	LDX	UNIT
	INC	HMORDS,X
	LDA	HMORDS,X
	STA	HOWMNY
	CMP	#1	;first order entered?
	BNE	X74
	LDA	#$FF
	STA	NEWOFG,X	;set flag
	LDA	HOWMNY
X74	SEC
	SBC	#1
	AND	#3
	TAY
	STY	TEMPI
	LDA	HMORDS,X
	SEC
	SBC	#1
	LSR	A
	LSR	A
	TAX
	LDA	STICKI
;isolate order
X71	DEY
	BMI	X70
	ASL	A
	ASL	A
	JMP	X71
X70	LDY	TEMPI
	EOR	ORD1,X	;fold in new order (sneaky code)
	AND	MASKO,Y
	EOR	ORD1,X
	STA	ORD1,X
	LDA	ORD1
	LDX	UNIT
	STA	WHORDS,X
	LDA	ORD2
	STA	WHORDH,X
;
;move maltakreuze
;
	JSR	CLRP2
	LDX	STICKI
	LDA	KRZX
	CLC
	ADC	XOFF,X
	STA	KRZX
	LDA	KRZY
	CLC
	ADC	YOFF,X
	STA	KRZY
	JSR	DSPKRZ
	JMP	EXITI
;
;ERROR on inputs routine
;squawks speaker and puts out error message
;
SQUAWK	LDY	#$69
LOOP28	LDA	ERRMSG,X
	SEC
	SBC	#$20
	STA	TXTWDW,Y
	INY
	INX
	TXA
	AND	#$1F
	BNE	LOOP28
	LDA	#$68
	STA	AUDC1
	LDA	#$50
	STA	AUDF1	;'HONK!'
	LDA	#$FF
	STA	ERRFLG
	BMI	EXITI
;
;NO BUTTON PRESSED ROUTINE
;
NOBUT	STA	DBTIMR
	LDA	STICK
	AND	#$F
	EOR	#$F
	BNE	SCROLL
	STA	AUDC1
	STA	STKFLG
	LDA	#8
	STA	DELAY
	CLC
	ADC	RTCLKL
	STA	TIMSCL
	JSR	ERRCLR
EXITI	JMP	ENDISR
SCROLL	LDA	#0
	STA	ATRACT
;
;acceleration feature of cursor
;
	LDA	TIMSCL
	CMP	RTCLKL
	BNE	EXITI
	LDA	DELAY
	CMP	#1
	BEQ	X21
	SEC
	SBC	#1
	STA	DELAY
X21	CLC
	ADC	RTCLKL
	STA	TIMSCL
;
	LDA	#0
	STA	OFFLO
	STA	OFFHI	;zero the offset
;
	LDA	STICK	;get joystick reading
	PHA		;save it on stack for other bit checks
	AND	#8	;joystick left?
	BNE	CHKRT	;no, move	on
	LDA	CURSXL
	BNE	X13
	LDX	CURSXH
	BEQ	CHKUP
X13	SEC
	SBC	#1
	STA	CURSXL
	BCS	X14
	DEC	CURSXH
X14	LDA	SHPOS0
	CMP	#$BA
	BEQ	X1
	CLC
	ADC	#1
	STA	SHPOS0
	STA	HPOSP0
	BNE	CHKUP
X1	LDA	XPOSL
	SEC	;decrement x-coordinate
	SBC	#1
	STA	XPOSL
	AND	#7
	STA	HSCROLL	;fine scroll
	CMP	#7	;scroll overflow?
	BNE	CHKUP	;no, move on
	INC	OFFLO	;yes, mark it for offset
	CLV
	BVC	CHKUP	;no point in checking for joystick right
CHKRT	PLA	;get back joystick byte
	PHA	;save it again
	AND	#4 ;joystick right?
	BNE	CHKUP	;no, move on
	LDA	CURSXL
	CMP	#$64
	BNE	X12
	LDX	CURSXH
	BNE	CHKUP
X12	CLC
	ADC	#1
	STA	CURSXL
	BCC	X15
	INC	CURSXH
X15	LDA	SHPOS0
	CMP	#$36
	BEQ	X2
	SEC
	SBC	#1
	STA	SHPOS0
	STA	HPOSP0
	BNE	CHKUP
X2	LDA	XPOSL
	CLC	;no, increment x-coordinate
	ADC	#1
	STA	XPOSL
	AND	#7
	STA	HSCROLL	;fine scroll
	BNE	CHKUP	;scroll overflow? if not, move on
	DEC	OFFLO	;yes, set up offset for character scroll
	DEC	OFFHI
CHKUP	PLA	;joystick up?
	LSR	A
	PHA
	BCS	CHKDN	;no, ramble on
	LDA	CURSYL
	CMP	#$5E
	BNE	X3
	LDX	CURSYH
	CPX	#2
	BEQ	CHKDN
X3	INC	CURSYL
	BNE	X11
	INC	CURSYH
X11	LDX	SCY
	CPX	#$1B
	BEQ	X6
	INC	CURSYL
	BNE	X18
	INC	CURSYH
X18	DEX
	STX	SCY
	TXA
	CLC
	ADC	#$12
	STA	TEMPI
LOOP4	LDA	PLYR0,X
	STA	PLYR0-1,X
	INX
	CPX	TEMPI
	BNE	LOOP4
	BEQ	CHKDN
X6	LDA	YPOSL
	SEC
	SBC	#1
	BCS	X7
	DEC	YPOSH
X7	STA	YPOSL
	AND	#$F
	STA	VSCROLL	;fine scroll
	CMP	#$F
	BNE	CHKDN	;scroll overflow? If not, amble on
	LDA	OFFLO	;yes, set up offset for scroll
	SEC
	SBC	#$30
	STA	OFFLO
	LDA	OFFHI
	SBC	#0
	STA	OFFHI
CHKDN	PLA		;joystick down?
	LSR	A
	BCS	CHGDL	;no, trudge on
	LDA	CURSYL
	CMP	#2
	BNE	X5
	LDX	CURSYH
	BEQ	CHGDL
X5	SEC
	SBC	#1
	STA	CURSYL
	BCS	X10
	DEC	CURSYH
X10	LDX	SCY
	CPX	#$4E
	BEQ	X8
	SEC
	SBC	#1
	STA	CURSYL
	BCS	X19
	DEC	CURSYH
X19	INX
	STX	SCY
	TXA
	CLC
	ADC	#$12
	DEX
	DEX
	STX	TEMPI
	TAX
LOOP5	LDA	PLYR0-1,X
	STA	PLYR0,X
	DEX
	CPX	TEMPI
	BNE	LOOP5
	BEQ	CHGDL
X8	LDA	YPOSL
	CLC	;no, decrement y-coordinate
	ADC	#1
	STA	YPOSL
	BCC	X9
	INC	YPOSH
X9	AND	#$F
	STA	VSCROLL	;fine scroll
	BNE	CHGDL	;no, move on
	LDA	OFFLO	;yes, mark offset
	CLC
	ADC	#$30
	STA	OFFLO
	LDA	OFFHI
	ADC	#0
	STA	OFFHI
;
;In this loop we add the offset values to the existing
;LMS addresses of all display lines.
;This scrolls the characters.
;
CHGDL	LDY	#8
DLOOP	LDA	(DLSTPT),Y
	CLC
	ADC	OFFLO
	STA	(DLSTPT),Y
	INY
	LDA	(DLSTPT),Y
	ADC	OFFHI
	STA	(DLSTPT),Y
	INY
	INY
	CPY	#$26
	BNE	DLOOP
;
ENDISR	JMP	XITVBV	;exit vertical blank routine
;
;SUBROUTINE CLRP1
;clears the arrow player
;
CLRP1	LDA	#0
	LDY	STEPY
	DEY
	TAX
LOOP23	CPY	#$80
	BCS	X22
	STA	PLYR1,Y
X22	INY
	INX
	CPX	#$B
	BNE	LOOP23
	RTS
;
;clears the maltakreuze
;
CLRP2	LDA	#0
	TAY
LOOP25	STA	PLYR2,Y
	INY
	BPL	LOOP25
	RTS
;
;SUBROUTINE ERRCLR
;clears sound and the text window
;
ERRCLR	LDA	ERRFLG
	BPL	ENDERR
	LDA	#0
	STA	AUDC1
	STA	ERRFLG
	LDY	#$88
	LDX	#$1F
LOOP29	STA	TXTWDW,Y
	DEY
	DEX
	BPL	LOOP29
ENDERR	RTS
;
;subroutine DSPKRZ displays the maltakreuze
;
DSPKRZ	LDX	#0
	LDA	YPOSL
	LSR	A
	BCS	Y86
	LDX	#$40
Y86	STX	$D01C
	LDA	KRZX
	STA	HPOSP2
	LDY	KRZY
	LDX	#$18
	LDA	UNIT
	BEQ	LOOP26
	LDX	#8
	CMP	#3
	BCC	LOOP26
	LDX	#$10
LOOP26	LDA	CHRSET,X
	CPY	#$80
	BCS	X45
	STA	PLYR2,Y
X45	INY
	INX
	TXA
	AND	#7
	BNE	LOOP26
	RTS
;
;displays the status of a unit
;
DSTATS	LDY	#$36
	CPX	NOROMS
	BCC	X30
	LDA	TYPE,X
	CLC
	ADC	#6
	BNE	Y84
X30	INX
	TXA
Y84	JSR	DWORDS	;display legatus
	DEY
	LDA	#13	;dash
	STA	TXTWDW,Y
	INY
	STA	TXTWDW,Y
	INY
	STA	TXTWDW,Y
	INY
	LDA	#$2D	;'MEN'
	STA	TXTWDW,Y
	INY
	LDA	#$25
	STA	TXTWDW,Y
	INY
	LDA	#$2E
	STA	TXTWDW,Y
	INY
	LDA	#$1A	;':'
	STA	TXTWDW,Y
	INY
	LDA	#0
	STA	TXTWDW,Y
	INY
	LDX	UNIT
	LDA	MSTRNG,X	;muster strength
	JSR	DBIGN
	LDA	#0
	STA	TXTWDW,Y
	INY
	LDA	#0	;'SWORDS'
	JSR	DWORDS
	DEY
	LDA	#$1A	;':'
	STA	TXTWDW,Y
	INY
	LDA	#0
	STA	TXTWDW,Y
	INY
	LDX	UNIT
	LDA	CSTRNG,X	;combat strength
	JSR	DBIGN
	LDA	#0
	STA	TXTWDW,Y
	INY
	STA	TXTWDW,Y
	RTS
;
;SUBROUTINE DNUMBR
;displays a number with leading zero suppress
;
DNUMBR	LDX	#$FF
	SEC
LOOP42	INX
	SBC	#100
	BCS	LOOP42
ENTRY2	PHA
	TXA
	STA	LZFLG
	BEQ	X46
	ADC	#$10
	STA	TXTWDW,Y
	INY
X46	PLA
	ADC	#100
	LDX	#$FF
	SEC
LOOP41	INX
	SBC	#10
	BCS	LOOP41
	PHA
	TXA
	BNE	Y33
	LDA	LZFLG
	BEQ	Y34
	LDA	#0
Y33	ADC	#$10
	STA	TXTWDW,Y
	INY
Y34	PLA
	ADC	#26
	STA	TXTWDW,Y
	INY
	RTS
;
DBIGN	LDX	#0
	STX	ACCHI
	ASL	A
	ROL	ACCHI
	STA	ACCLO
	DEX
LOOP43	INX
	LDA	ACCLO
	SEC
	SBC	#100
	STA	ACCLO
	LDA	ACCHI
	SBC	#0
	STA	ACCHI
	BCS	LOOP43
	LDA	ACCLO
	JSR	ENTRY2
	LDA	#$10
	STA	TXTWDW,Y
	INY
	LDA	#0
	STA	TXTWDW,Y
	INY
	RTS
;
;From here to $5F00 is expansion RAM
;
;This is the DLI routine
;
	ORG	$5F00
DLI1	PHA
	TXA
	PHA
	LDA	#$18	;lowest contour color
	EOR	COLRSH
	AND	DRKMSK
	TAX
	LDA	#$64	;purple band at top of map
	EOR	COLRSH
	AND	DRKMSK
	STA	WSYNC
	STA	COLBAK
	STX	COLPF0
	LDA	#$60
	STA	CHBASE
	LDX	#DLI2&$FF
	JMP	DLIOUT
;
DLI2	PHA
	TXA
	PHA
	LDA	#$C2	;top of map
	EOR	COLRSH
	AND	DRKMSK
	STA	WSYNC
	STA	COLBAK
	LDX	#DLI3&$FF
	JMP	DLIOUT
;
DLI3	PHA
	TXA
	PHA
	LDX	#$E0	;bottom of map
	STX	CHBASE
	LDA	#$42
	EOR	COLRSH
	AND	DRKMSK
	STA	COLPF2
	LDA	#$F
	EOR	COLRSH
	AND	DRKMSK
	STA	COLPF1
	LDX	#DLI4&$FF
	JMP	DLIOUT
;
DLI4	PHA
	TXA
	PHA
	LDA	#$8A	;bright blue strip
	EOR	COLRSH
	AND	DRKMSK
	STA	COLBAK
	LDX	#DLI5&$FF
	JMP	DLIOUT
;
DLI5	PHA
	TXA
	PHA
	LDA	#$3A	;cheesy yellow
	EOR	COLRSH
	AND	DRKMSK
	STA	COLPF2
	LDA	#0
	EOR	COLRSH
	AND	DRKMSK
	STA	COLPF1
	LDX	#DLI6&$FF
	JMP	DLIOUT
;
DLI6	PHA
	TXA
	PHA
	LDA	#$56
	EOR	COLRSH
	AND	DRKMSK
	STA	COLPF2
	LDX	#DLI7&$FF
	JMP	DLIOUT
;
DLI7	PHA
	TXA
	PHA
	LDA	#$82
	EOR	COLRSH
	AND	DRKMSK
	STA	COLBAK
	LDX	#DLI8&$FF
	JMP	DLIOUT
;
DLI8	PHA
	TXA	
	PHA
	LDA	#$12	;brown bottom
	EOR	COLRSH
	AND	DRKMSK
	STA	WSYNC
	STA	COLBAK
	LDX	#DLI1&$FF
;
DLIOUT	STX	DLIVEC
	PLA
	TAX
	PLA
	RTI
;LEGIONNAIRE V22S SUBROUTINE MAY 22, 1982
;
;the include of the data module goes here
	INCLUDE D4:LEG22D.ASM
;
	ORG	$5200
;
;produces a delay in frames equal to value in accumulator
;
STALL	CLC
	ADC	RTCLKL
LOOP79	CMP	RTCLKL
	BNE	LOOP79
	RTS
;
;sets up LAT and LONG with target coordinates of unit
;whose ID is in X
;
SETUP	LDA	WHORDS,X
	AND	#3
	TAY
SETUP2	LDA	UNITX,X
	CLC
	ADC	XADD,Y
	STA	LONG
	LDA	UNITY,X
	CLC
	ADC	YADD,Y
	STA	LAT
	RTS
;
;transfers coordinates of unit whose ID is in X to LAT, LONG
;
SETLAT	LDA	UNITX,X
	STA	LONG
	LDA	UNITY,X
	STA	LAT
	RTS
;
;determines altitude of a square at LAT, LONG
;
ALTUD	LDA	#0
	STA	HEIGHT
	JSR	TERR
	LDA	TRNCOD
	CMP	#$4C
	BCC	X56
	CMP	#$50
	BCS	X56
	RTS
X56	LDY	#0
	STY	DIR
	LDA	LAT
	STA	TEMPY
	LDA	LONG
	STA	TEMPX
;
;this loop sweeps through the four cardinal directions
;
LOOP12	LDA	#1
	STA	RANGE
	LDA	TEMPX
	STA	LONG
	LDA	TEMPY
	STA	LAT
;
;this loop searches along a line for a contour square
;
LOOP11	LDY	DIR
	LDA	LONG
	CLC
	ADC	XADD,Y
	STA	LONG
	LDA	LAT
	CLC
	ADC	YADD,Y
	STA	LAT
	JSR	TERR
	LDA	TRNCOD
	BNE	X58
	ASL	RANGE	;clear square---keep going
	BNE	LOOP11
	LDA	#0
	BEQ	X60
;
X58	AND	#$3F
	CMP	#$10
	BCS	X57
	LDA	#0
	BEQ	X60
X57	LDA	TRNCOD
	AND	#$C0
	LSR	A
	LSR	A
	ADC	#$10
	SEC
	SBC	RANGE
	BCS	X60
	LDA	#0
X60	CLC
	ADC	HEIGHT
	STA	HEIGHT
	INC	DIR
	LDY	DIR
	CPY	#4
	BNE	LOOP12
	RTS
;
;swaps unit character with terrain character in SWAP buffer
;input is unit ID in X
;
SWITCH	LDA	#0
	STA	MAPHI
	LDA	UNITY,X
	ASL	A
	ROL	MAPHI
	ASL	A
	ROL	MAPHI
	ASL	A
	ROL	MAPHI
	ASL	A
	ROL	MAPHI
	STA	TEMPLO
	LDY	MAPHI
	STY	TEMPHI
	ASL	A
	ROL	MAPHI
	CLC
	ADC	TEMPLO
	STA	MAPLO
	LDA	MAPHI
	ADC	TEMPHI
	ADC	#$65
	STA	MAPHI
	LDY	UNITX,X
	LDA	(MAPLO),Y
	PHA
	LDA	SWAP,X
	STA	(MAPLO),Y
	PLA
	STA	SWAP,X
	RTS
;
;determines what terrain is in a square at LAT, LONG
;
TERR	LDA	#0
	STA	MAPPTR+1
	LDA	#$FF
	STA	UNITNO
	LDA	LAT
	ASL	A
	ROL	MAPPTR+1
	ASL	A
	ROL	MAPPTR+1
	ASL	A
	ROL	MAPPTR+1
	ASL	A
	ROL	MAPPTR+1
	STA	TEMP1
	LDY	MAPPTR+1
	STY	TEMP2
	ASL	A
	ROL	MAPPTR+1
	CLC
	ADC	TEMP1
	STA	MAPPTR
	LDA	MAPPTR+1
	ADC	TEMP2
	ADC	#$65
	STA	MAPPTR+1
	LDY	LONG
	LDA	(MAPPTR),Y
	STA	TRNCOD
	AND	#$3F
	CMP	#1
	BEQ	LOOKUP
	CMP	#2
	BEQ	LOOKUP
	CMP	#3
	BEQ	LOOKUP
	CMP	#4
	BEQ	LOOKUP
	CMP	#10
	BEQ	LOOKUP
	RTS
;
LOOKUP	LDX	NOUNTS
	DEX
	LDA	LAT
LOOP30	CMP	UNITY,X
	BEQ	MIGHTB
X97	DEX
	BPL	LOOP30
	LDA	#$FF
	STA	TXTWDW+128
	BMI	X47
MIGHTB	LDA	LONG
	CMP	UNITX,X
	BNE	X99
	LDA	CSTRNG,X
	BNE	X47
X99	LDA	LAT
	JMP	X97
X47	STX	UNITNO
	LDA	SWAP,X
	STA	TRNCOD
	RTS
;
;randomly selects a square
;
CHOSQ	LDA	RANDOM
	AND	#$3F
	BEQ	CHOSQ
	CMP	#43
	BCS	CHOSQ
	STA	SQX
X25	LDA	RANDOM
	AND	#$3F
	BEQ	CHOSQ
	CMP	#35
	BCS	X25
	CMP	#4
	BCC	X25
	STA	SQY
	RTS
;
;returns absolute value of value in accumulator
;
ABSVAL	BPL	X24
INVERT	EOR	#$FF
	CLC
	ADC	#1
X24	RTS
;
;checks if a placed unit is in an unacceptable position
;
PLACE1	LDA	RANDOM
	AND	#3
	CLC
	ADC	MOTHRX
	STA	LONG
	LDA	RANDOM
	AND	#3
	CLC
	ADC	MOTHRY
	STA	LAT
	JSR	TERR
	LDA	UNITNO	;square occupied?
	BPL	PLACE1	;yes, try again
	LDA	TRNCOD	;any trees?
	CMP	#$4C
	BCC	X27
	CMP	#$50
	BCC	PLACE1	;yes, try again
X27	LDX	ARMY
	LDA	LONG
	STA	UNITX,X
	LDA	LAT
	STA	UNITY,X
	JSR	SWITCH
	DEC	ARMY
	RTS
;
;combat evaluation subroutines
;
COMBT	LDA	#0
	STA	VICFLG
	LDX	UNITNO
	STX	DEFNDR
	LDA	SWAP,X
	PHA
	LDA	#$C9
	CPX	NOROMS
	BCS	X28
	LDA	#$89
X28	STA	SWAP,X
	JSR	SWITCH
	LDA	#$40
	STA	AUDF2
	LSR	A
	STA	AUDF3
	LSR	A
	STA	AUDF4
	LDX	#0
LOOP15	LDA	SC2TAB,X
	STA	AUDC2
	LDA	SC3TAB,X
	STA	AUDC3
	LDA	SC4TAB,X
	STA	AUDC4
	LDA	#1
	JSR	STALL
	INX
	CPX	#16
	BNE	LOOP15
	LDA	#$A0
	STA	AUDC2
	STA	AUDC3
	STA	AUDC4
	LDX	DEFNDR
	JSR	SWITCH
	PLA
	STA	SWAP,X
	LDA	#5
	JSR	STALL
;
;defender's strike
;
	LDA	CSTRNG,X
	STA	MULTPR
	LDA	DEFS,X
	STA	DIVISR
	JSR	MULTIA
	LDA	PRODHI
	STA	TEMP2
	LDA	HMORDS,X
	BEQ	X89
	LDA	WHORDS,X
	AND	#3
	STA	TEMP1
	LDX	ARMY
	LDA	WHORDS,X
	LDX	#2
	AND	#3
	CMP	TEMP1
	BEQ	LOOP13
	LDX	#1
	CLC
	ADC	TEMP1
	LSR	A
	BCS	LOOP13
	LDX	#0
LOOP13	DEX
	BMI	X89
	LDY	DEFNDR
	LDA	SIDS,Y
	STA	MULTPR
	LDA	TEMP2
	STA	DIVISR
	JSR	MULTIA
	LDA	PRODHI
	STA	TEMP2
	JMP	LOOP13
;
X89	LSR	TEMP2
	LSR	TEMP2
	LSR	TEMP2
	LSR	TEMP2
	INC	TEMP2
	LDX	ARMY
	LDA	CSTRNG,X
	SEC
	SBC	TEMP2
	BEQ	Y24
	BCS	Y20
Y24	JMP	DEAD
Y20	STA	CSTRNG,X
	LDA	MSTRNG,X
	SEC
	SBC	TEMP2
	STA	MSTRNG,X
	LDY	DTOM,X
	ASL	TEMP2
	ASL	TEMP2
LOOP77	LSR	TEMP2
	DEY
	BPL	LOOP77
	LDA	CSTRNG,X
	SEC
	SBC	TEMP2
	BEQ	Y24
	BCS	Y79
	JMP	DEAD
Y79	JSR	BRKCHK
;
;attacker's strike
;
	JSR	DELTAH
	LSR	A
	LSR	A
	LSR	A
	CLC
	ADC	#2
	STA	TEMP2
	LDX	DEFNDR
	LDA	CSTRNG,X
	SEC
	SBC	TEMP2
	STA	CSTRNG,X
	BEQ	X62
	BCS	X29
X62	JMP	DEAD
X29	LDA	MSTRNG,X
	LSR	TEMP2
	SEC
	SBC	TEMP2
	STA	MSTRNG,X
	LDY	DTOM,X
	ASL	TEMP2
	ASL	TEMP2
LOOP88	LSR	TEMP2
	DEY
	BPL	LOOP88
	LDA	CSTRNG,X
	SEC
	SBC	TEMP2
	BEQ	X62
	BCS	Y91
	JMP	DEAD
Y91	JSR	BRKCHK
	BCC	ENDCOM
	LDY	ARMY	;defender breaks
	LDA	WHORDS,Y
	AND	#3
	STA	DIR
	TAY
	JSR	RETRET
	BCS	YESRET
	LDA	DIR
	CLC
	ADC	#1
	AND	#3
	TAY
	JSR	RETRET
	BCS	YESRET
	LDA	DIR
	SEC
	SBC	#1
	AND	#3
	TAY
	JSR	RETRET
	BCC	ENDCOM
;
YESRET	LDX	DEFNDR
	JSR	SWITCH
	LDA	RETX
	STA	UNITX,X
	LDA	RETY
	STA	UNITY,X
	JSR	SWITCH
VICCOM	LDA	#$FF
	STA	VICFLG
ENDCOM	RTS
;
;determines whether a unit can retreat in direction Y
;
RETRET	LDX	DEFNDR
	JSR	SETUP2
	LDA	LAT
	STA	RETY
	LDA	LONG
	STA	RETX
	JSR	TERR
	LDA	UNITNO
	BPL	X78
	LDA	TRNCOD
	CMP	#$4C
	BCC	X81
	CMP	#$50
	BCC	X78
X81	CMP	#$C9
	BEQ	X78
	SEC
	RTS
X78	CLC
	RTS
;
;shovels the bodies away
;
DEAD	LDA	#0
	STA	MSTRNG,X
	STA	CSTRNG,X
	STA	HMORDS,X
	JSR	SWITCH
	LDA	#$AF
	STA	AUDC2
	LDA	#20
	STA	AUDF2
	JSR	STALL
	LDA	#0
	STA	AUDC2
	RTS
;
;determines if a unit breaks under attack
;
BRKCHK	LDY	BRKTHT,X
	LDA	MSTRNG,X
LOOP78	LSR	A
	DEY
	BPL	LOOP78
	STA	TEMP1
	LDA	MSTRNG,X
	SEC
	SBC	TEMP1
	CMP	CSTRNG,X
	BCC	X88
	LDA	#0
	STA	HMORDS,X
X88	RTS
;
;calculates the difference in height
;
DELTAH	LDX	DEFNDR
	JSR	SETLAT
	JSR	ALTUD
	STA	HOLD
	LDX	ARMY
	JSR	SETLAT
	JSR	ALTUD
	SEC
	SBC	HOLD
	BCC	X39
	JSR	JUNKO
	BCC	X41
	LDA	#$FF
	BCS	X41
X39	JSR	JUNKO
	BCS	X41
	LDA	#0
X41	RTS
;
;used by the above subroutine
;
JUNKO	STA	TEMP2
	LDX	ARMY
	LDA	CSTRNG,X
	STA	MULTPR
	LDA	OFFS,X
	STA	DIVISR
	JSR	MULTIA
	LDA	PRODHI
	ADC	TEMP2
	RTS
;
;calculates SAFETY and DANGER at LAT, LONG
;(no longer very important)
;
QUACK	LDA	#0
	STA	SAFETY
	STA	DANGER
	LDX	NOUNTS
	DEX
LOOP35	JSR	FEAR
	ADC	SAFETY
	BCC	X34
	LDA	#$FF
X34	STA	SAFETY
	DEX
	CPX	NOROMS
	BCS	LOOP35
LOOP38	JSR	FEAR
	ADC	DANGER
	BCC	X4
	LDA	#$FF
X4	STA	DANGER
	DEX
	BPL	LOOP38
	CMP	#30
	BCS	X37
	LDA	SCLFLG
	BNE	X37
	LDA	#1
	STA	SCLFLG
	JMP	QUACK
X37	LDA	#0
	STA	SCLFLG
	RTS
;
;used by subroutine QUACK
;
FEAR	LDA	CSTRNG,X
	LDY	SCLFLG
	BNE	X83
	LSR	A
	LSR	A
X83	STA	PRODLO
	LDA	#0
	STA	PRODHI
	LDA	UNITX,X
	SEC
	SBC	LONG
	JSR	ABSVAL
	STA	TEMP1
	LDA	UNITY,X
	SEC
	SBC	LAT
	JSR	ABSVAL
	CLC
	ADC	TEMP1
	ADC	#1
	STA	DIVISR
	CPX	NOROMS
	BCS	Y26
	INC	DIVISR
Y26	JSR	DIVIDE
	LDA	PRODLO
	CLC
	RTS
;
;moves text string of indefinite length to screen
;
INDEFD	STA	TEMP1
LOOP55	LDA	INDEFM,X
	SEC
	SBC	#$20
	STA	TXTWDW,Y
	INY
	INX
	CPX	TEMP1
	BNE	LOOP55
	RTS
;
;calculates total combat strengths
;
CALTCS	LDA	#0
	STA	TOTBCS
	STA	TOTRCS
	STA	TOTBMS
	STA	TOTRMS
	TAY
	LDX	NOUNTS
	DEX
LOOP27	LDA	MSTRNG,X
	LSR	A
	LSR	A
	LSR	A
	CPX	#1
	BCC	Y22
	CPX	#3
	BCC	Y23
Y22	LSR	A
Y23	CLC
	ADC	TOTBMS,Y
	BCC	Y1
	LDA	#$FF
Y1	STA	TOTBMS,Y
	LDA	CSTRNG,X
	LSR	A
	LSR	A
	LSR	A
	LSR	A
	CLC
	ADC	TOTBCS,Y
	BCC	Y25
	LDA	#$FF
Y25	STA	TOTBCS,Y
	DEX
	BMI	Y2
	CPX	NOROMS
	BCS	LOOP27
	LDY	#1
	BPL	LOOP27
;
Y2	LDA	TOTBCS
	SEC
	SBC	TOTRCS
	BCS	X98
	SEC
	ROR	A
	SEC
	ROR	A
	JMP	Y3
X98	LSR	A
	LSR	A
Y3	STA	TERM3
	RTS
;
BLANKS	TAX
	LDA	#0
LOOP65	STA	TXTWDW,Y
	INY
	DEX
	BNE	LOOP65
	RTS
;
;used in barbarian AI
;
FRANGE	LDA	UNITX,X
	SEC
	SBC	LONG
	JSR	ABSVAL
	STA	TEMP2
	STA	MULTPR
	STA	DIVISR
	JSR	MULTIA
	LDA	PRODLO
	STA	ACCLO
	LDA	PRODHI
	STA	ACCHI
	LDA	UNITY,X
	SEC
	SBC	LAT
	JSR	ABSVAL
	STA	MULTPR
	STA	DIVISR
	CLC
	ADC	TEMP2
	STA	RANGE
	JSR	MULTIA
	LDA	PRODLO
	CLC
	ADC	ACCLO
	STA	ACCLO
	LDA	PRODHI
	ADC	ACCHI
	STA	ACCHI
	RTS
;
;multiplies MULTPR by DIVISR to get PRODLO, PRODHI
;
MULTIA	LDA	#0
	STA	PRODLO
	STA	PRODHI
	STA	TEMP1
LOOP31	LSR	MULTPR
	BCC	Y11
	CLC
	LDA	PRODLO
	ADC	DIVISR
	STA	PRODLO
	LDA	PRODHI
	ADC	TEMP1
	STA	PRODHI
Y11	LDA	MULTPR
	BEQ	Y12
	ASL	DIVISR
	ROL	TEMP1
	BCC	LOOP31
Y12	RTS
;
;divides PRODLO, PRODHI by DIVISR to get quotient in PRODLO
;
DIVIDE	LDY	#8
LOOP34	ASL	PRODLO
	ROL	PRODHI
	BCC	Y13
	LDA	PRODHI
	SBC	DIVISR
	JMP	Y14
Y13	LDA	PRODHI
	SEC
	SBC	DIVISR
	BCC	Y15
Y14	STA	PRODHI
	INC	PRODLO
Y15	DEY
	BNE	LOOP34
	RTS
;
;sets tribe choice
;
SETRIB	STX	TEMP2
	STA	TEMP1
	STA	TRIBE2
	STY	TURN
LOOP81	LDA	STICK
	AND	#1
	BNE	Y80
	LDA	TRIBE2
	CMP	TEMP2
	BEQ	Y80
	INC	TRIBE2
	JMP	Y81
Y80	LDA	STICK
	AND	#2
	BNE	Y81
	LDA	TRIBE2
	CMP	TEMP1
	BEQ	Y81
	DEC	TRIBE2
Y81	LDY	TURN
	LDA	TRIBE2
	CLC
	ADC	#$10
	TAX
	JSR	DWORDS
	LDA	#5
	JSR	BLANKS
	LDA	#30
	CLC
	ADC	RTCLKL
LOOP83	LDX	TRIG0
	BEQ	Y83
	CMP	RTCLKL
	BNE	LOOP83
	BEQ	LOOP81
Y83	RTS
;
;waits for joystick trigger to be released
;
WFRLS	LDA	TRIG0
	AND	#1
	BEQ	WFRLS
	LDA	CONSOL
	AND	#7
	CMP	#7
	BNE	WFRLS
	RTS
;
;SUBROUTINE DWORDS
;displays a single word from a long table of words
;
DWORDS	ASL	A
	ASL	A
	ASL	A
	TAX
LOOP20	LDA	WORDS,X
	SEC
	SBC	#$20
	STA	TXTWDW,Y
	BEQ	NDW
	INY
	INX
	TXA
	AND	#7
	BNE	LOOP20
NDW	INY
	RTS
