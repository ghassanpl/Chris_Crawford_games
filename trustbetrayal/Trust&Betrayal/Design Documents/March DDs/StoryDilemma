	Boy, do I have a big problem!  I'm coming into the final stretch of thegame (in design terms).  The first playable version of the game is due in just17 days.  I have to put in the last main features of the game in the next 17days.  There are only three main features left: options screen, endgamehandling, and final work on random events.  The options screen and the endgamestuff should take less than a week between them, so I'm in pretty good shape,right?  Well, not quite.	The random events feature was initially intended to be a kind of souped-up "Chance" or "Community Chest".  I would dump odd little storieson the player that would require some sort of response from him.  I hadfigured that these would be nothing more than short (500-word) stories withsome sort of kicker ending.  For example, my first prototype random eventhad you bumping into a character in a doorway.  What do you do, the event demands to know:  1) wait to see what he does; 2) step aside and say, 'Afteryou.'; 3) demand that he step aside; 4) push him out of the way.  You pickan option and the software then calculates any changes in your relationshipresulting from your action.  	Sounds simple, right?  Ah, but I cannot resist the temptation totinker.  First there's the problem that stories are written around a singlecharacter.  What a waste!  I come up with a sneaky keycode system that allowsthe software to use ANY character in the story, replacing names and personalpronouns to match the character.  Then my consultant points out that I needan acknowledgement of the player's actions.  If the player in the above storydecides to push the character out of the way, that character should either punch him out or step aside, depending on his temper and willfulness.  OK, soI need some sort of computational capability controlled by ASCII files.  Icome up with a software interpreter based on a virtual programmable calculator.My format for stories starts to get complicated.	You think I'd be satisfied, wouldn't you?  Well, there are stillproblems.  I need ways to make the stories more repeatable.  What will the player think when he encounters a story the second time?  I need to make thatsecond encounter interesting.  My original plan had been to stuff the diskwith 200 stories and accept the fact that any story encountered a second timewill be boring.  But now I am thinking that maybe I can wring more play-valueout of each story if I can just make each story more plastic, more adapatable.I spent much of this morning going over possibilities with my friend and confidant Dale Yocum.  There are so many exciting opportunities here!  Forexample, I could build a story as a skeleton of sentences that lay out thebasic events of the story, but included within the skeleton are reference tovarious "skeleton-filling-out" sentences that can be filled in with sentencesfrom a global dictionary of sentences.  These "filling-out" sentences canprovide the information that is specific to the player and the character withwhom the story takes place.	What I'm talking about here is a story generator.  This is exciting!  But how can I tackle this at this late stage of the game?  So here's the bigdilemma:  do I stay on schedule and accept the current primitive random events,(and call my next game "Stories from the Computer") or do I take the plungenow?